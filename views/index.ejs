<!DOCTYPE html>
<html lang="en">
<head>
    <title>Proteins Interlinking</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/formss.css">
    <script src="https://d3js.org/d3.v4.min.js"></script>
</head>
<body>
    <nav class="navbar navbar-expand-sm bg-dark navbar-dark" >
        <div class="container">
            <a class="navbar-brand" href="/api/protein/mainpage">Proteins Interlinking</a>
            <!-- Links -->
            <ul class="navbar-nav ml-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Add
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="/api/protein/addpage">Protein</a>
                        <a class="dropdown-item" href="/api/protein/addproteininterlinking">Protein Interlinking</a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="/api/protein/searchpage">Search</a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="/api/protein/interactomepage">Interlinking</a>
                </li>
            </ul>
        </div>
    </nav>
    <div>
        <h2 class="text-center my-2">Human Proteins</h2>
    </div>
    <svg ></svg>
    <script >
        var width = window.innerWidth
        var height = window.innerHeight
        var nodes =[]
    
        d3.json('http://localhost:3800/api/protein/proteinlist',function(error, data){
            nodes =data;
        var svg = d3.select('svg')
        svg.attr('width', width).attr('height', height)
        
        // simulation setup with all forces
        var simulation = d3
        .forceSimulation()
        .force('charge', d3.forceManyBody().strength(-50))
        .force('center', d3.forceCenter(width/2, height/2))
        
        function getNodeColor(node) {
            if(nodes.Interactortype == "interactor" )
            {
                return "#FF0000"
            }
            else if(nodes.Interactortype == "substrate" )
            {
                return "#0000FF"
            }else{
                return "#FFFF00"
            }
        }
        
        function radiusval(){
        var randomnumber=Math.floor((Math.random() * 15) + 1)
            return randomnumber
        }
        
        var nodeElements = svg.append("g")
        .attr("class", "nodes")
        .selectAll("circle")
        .data(nodes)
        .enter().append("circle")
            .attr("r", 20)
            .attr("fill", getNodeColor)
        
        var textEnsembleName = svg.append("g")
        .attr("class", "texts")
        .selectAll("text")
        .data(nodes)
        .enter().append("text")
        .text(function (nodes) { return  nodes.EnsembleName })
            .attr("font-size", 15)
            .attr("dx", 15)
            .attr("dy", 4)
        
        var textElementsProteinName = svg.append("g")
        .attr("class", "texts")
        .selectAll("text")
        .data(nodes)
        .enter().append("text")
            .text(function (nodes) { return  nodes.ProteinName })
            .attr("font-size", 15)
            .attr("dx", 15)
            .attr("dy", 4)

/*             var textElementsGeneNames = svg.append("g")
        .attr("class", "texts")
        .selectAll("text")
        .data(nodes)
        .enter().append("text")
            .text(function (nodes) { return  nodes.GeneNames })
            .attr("font-size", 15)
            .attr("dx", 15)
            .attr("dy", 4) */

        simulation.nodes(nodes).on('tick', () => {
            nodeElements
            .attr('cx', function (node) { return node.x })
            .attr('cy', function (node) { return node.y })
            textEnsembleName
            .attr('x', function (node) { return node.x+10 })
            .attr('y', function (node) { return node.y+20 }) 
            textElementsProteinName
            .attr('x', function (node) { return node.x+10 })
            .attr('y', function (node) { return node.y-20 })
            /* textElementsGeneNames
            .attr('x', function (node) { return node.x+10 })
            .attr('y', function (node) { return node.y }) */
            })
        })
    </script>
    </body>
</html>





